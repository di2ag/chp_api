apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chp-api.fullname" . }}
  labels:
    {{- include "chp-api.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "chp-api.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "chp-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }} 
      labels:
        {{- include "chp-api.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.chp_api.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh"]
          args: ["-c", "python3 manage.py collectstatic --noinput && gunicorn -c gunicorn.config.py --log-file=- --env DJANGO_SETTINGS_MODULE=chp_api.settings chp_api.wsgi:application --bind 0.0.0.0:8000"]
          ports:
            - name: http-app
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: {{ include "chp-api.fullname" . }}-pvc
              mountPath: /home/chp_api/staticfiles
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "chp-api.fullname" . }}-secret
                  key: secret_key
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "chp-api.fullname" . }}-secret
                  key: sql_database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "chp-api.fullname" . }}-secret
                  key: sql_username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "chp-api.fullname" . }}-secret
                  key: sql_password
            - name: DJANGO_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "chp-api.fullname" . }}-secret
                  key: django_superuser_password
            - name: SQL_ENGINE
              value: "{{ .Values.db.engine }}"
            - name: POSTGRES_HOST
              value: "{{ .Values.db.host }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.db.port }}"
            - name: DATABASE
              value: "{{ .Values.db.type }}"
            - name: DEBUG
              value: "{{ .Values.app.debug }}"
            - name: DJANGO_ALLOWED_HOSTS
              value: "{{ .Values.app.djangoAllowedHosts }}"
            - name: CSRF_TRUSTED_ORIGINS
              value: "{{ .Values.app.djangoCSRFTrustedOrigins }}"
            - name: DJANGO_SETTINGS_MODULE
              value: "{{ .Values.app.djangoSettingsModule }}"
            - name: DJANGO_SUPERUSER_USERNAME
              value: "{{ .Values.app.djangoSuperuserUsername }}"
            - name: DJANGO_SUPERUSER_EMAIL
              value: "{{ .Values.app.djangoSuperuserEmail }}"
        - name: {{ .Chart.Name }}-nginx
          {{- with .Values.chp_api_nginx.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContextNginx | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.nginxTag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-nginx
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: config-vol
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
        - name: {{ .Chart.Name }}-staticfs
          {{- with .Values.chp_api_staticfs.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContextStaticfs | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.staticfsTag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-staticfs
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: {{ include "chp-api.fullname" . }}-pvc
              mountPath: /var/www/static
          env:
            - name: FOLDER
              value: "{{ .Values.app.staticfsFolder }}"
            - name: DEBUG
              value: "{{ .Values.app.staticfsDebug }}"
      volumes:
        - name: config-vol
          configMap:
            name: {{ include "chp-api.fullname" . }}-configs
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "chp-api.fullname" . }}-pvc
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
